# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ ! ${TTY} =~ '^/dev/tty' ]]; then
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#if (( $+commands[gnuls] )); then
#  alias ls='gnuls'
#fi

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# directory
unsetopt AUTO_CD
unsetopt AUTO_PUSHD

setopt BSDECHO

unset "aliases[rsync]"
if [[ ! ${(@M)${(f)"$(ls --version 2>&1)"}:#*GNU *} ]]; then
  alias lx='ls -aF'
fi

unalias run-help >/dev/null 2>&1 && autoload -Uz run-help

if (( $+commands[clipit] )); then
  alias pbcopy='clipit'
  alias pbpaste='clipit -c'
elif (( $+commands[xclip] )); then
  alias pbcopy='xclip -selection c'
  alias pbpaste='xclip -selection c -o'
elif (( $+commands[clip.exe] )); then
  alias pbcopy='clip.exe'
  alias pbpaste='powershell.exe get-clipboard'
elif [ -x '/c/Windows/System32/clip.exe' ]; then
  alias pbcopy='/c/Windows/System32/clip.exe'
  alias pbpaste='/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe get-clipboard'
fi

if (( $+commands[eza] )); then
  alias eza='eza --color=always --icons -g'
  alias ll='eza -l'
  alias la='ll -a'
  alias lx='eza -a'
  alias lt='ll --sort=modified'
elif (( $+commands[exa] )); then
  alias exa='exa --color=always --icons -g'
  alias ll='exa -l'
  alias la='ll -a'
  alias lx='exa -a'
  alias lt='ll --sort=modified'
fi

(( ! $+commands[vi] && $+commands[vim] )) && alias vi='vim'

if (( $+commands[bat] )); then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
elif (( $+commands[batcat] )); then
  export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
  alias bat='batcat'
fi

if [[ $HOST =~ '.mahoroba.org$' ]]; then
  alias traceroute='env RA_SERVER=whois.mahoroba.org traceroute'
  alias traceroute6='env RA_SERVER=whois.mahoroba.org traceroute6'
fi

alias sortip='sort -t. +0 -1n +1 -2n +2 -3n +3 -4n'

# zshでオプション一覧の出力を分かりやすくする
# https://qiita.com/mollifier/items/26c67347734f9fcda274
function showoptions() {
  set -o | sed -e 's/^no\(.*\)on$/\1  off/' -e 's/^no\(.*\)off$/\1  on/'
}

# ghq + pecoじゃなくて fzf連携
# https://blog.fakiyer.com/entry/2016/01/29/142620
frepo() {
  local dir
  dir=$(ghq list > /dev/null | fzf-tmux --reverse +m) &&
    cd $(ghq root)/$dir
}

ssh-export() { export SSH_AUTH_SOCK=`ls /tmp/ssh-*/* |head -1` }

rmorig() {
  case "$1" in
  -n)
    delete=''
    shift
    ;;
  *)
    delete='-delete'
    ;;
  esac
  [[ -z $1 ]] && set '.'
  find $* -name '*.orig' -print $delete
}

if [[ -f /etc/zsh_command_not_found ]]; then
    source /etc/zsh_command_not_found
fi

# zsh-users/zsh-history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# zsh-users/zsh-autosuggestions
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=${ZSH_AUTOSUGGEST_ACCEPT_WIDGETS:#*forward-char}
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS+=(
	forward-char
	emacs-forward-char
	vi-forward-char
)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=60
bindkey '^[[1;2C' forward-word
bindkey '^[[1;2D' backward-word
bindkey '^[[5~' beginning-of-line
bindkey '^[[6~' end-of-line

(( $+commands[fasd] )) || path=($path ~/.zprezto/modules/fasd/external)
eval "$(fasd --init auto)"

if [[ -f ~/.fzf.zsh ]]; then
  source ~/.fzf.zsh
else
  () {
    local _fzf_dir_candidate=(
      /usr/local/share/examples/fzf/shell
      /usr/share/doc/fzf/examples
    )
    local _fzf_dir
    local _dir
    for _dir in $_fzf_dir_candidate; do
      if [[ -d $_dir ]]; then
	_fzf_dir=$_dir
	break
      fi
    done

    if [[ -n "$_fzf_dir" ]]; then
      # Auto-completion
      # ---------------
      [[ $- == *i* ]] && source "$_fzf_dir/completion.zsh" 2> /dev/null

      # Key bindings
      # ------------
      source "$_fzf_dir/key-bindings.zsh"

      # fzf+fasd
      # ------------
      local _fzf_fasd_dir=~/ghq/github.com/wookayin/fzf-fasd
      [[ -d $_fzf_fasd_dir ]] && source "$_fzf_fasd_dir/fzf-fasd.plugin.zsh"
    fi
  }
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
if [[ ! $TTY =~ '^/dev/tty' ]]; then
  [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
else
  PROMPT='%n@%m:%2~%# '
fi

# Local Variables:
# mode: sh
# sh-shell: zsh
# sh-basic-offset: 2
# End:
